{<img src="https://circleci.com/gh/stevemartin/worklist.svg?style=svg" alt="CircleCI" />}[https://circleci.com/gh/stevemartin/worklist]

= Worklist! A web based CV tool.
Worklist lets you effortlessly generate CV's and host & edit them online.

= End to end deployment

_currently only supporting heroku_

{Please follow this guide first}[https://devcenter.heroku.com/articles/getting-started-with-ruby#introduction] if you haven't already got a heroku account.

== 1. Get the code
    git clone https://github.com/stevemartin/worklist.git
    cd worklist

== 2. Deploy to heroku

Assuming you are logged in to your heroku toolbelt, create an app like:

    heroku create worklist-{fooname} --region {eu|us}
    heroku config:set BUNDLE_WITHOUT="development:test"
    git push heroku master
    heroku run rake --trace db:migrate

Where {fooname} is your name or similar and {eu|us} is one or the other, depending on your location.

Now visit the running app, it _should_ all be working.

= Screenshots

== Edit mode

link:wl-edit-mode.png

== HTML view mode

link:wl-view-mode.png


= Development

Worklist is an all in one hybrid Rails & Angular SPA. That means:

* It uses Rails as an API for the main UI
* It uses Angular as a frontend for the main UI
* It uses Rails asset management to manage the main Javascript and CSS assets ( rails-assets and sprockets combined )

If this app seems useful to you, well, the code and UI is by no means perfect, so if you see something you don't like, please feel free fix it and open a PR! :)

== Feature Wishlist
* Invite only viewing - this would enable you to lock the CV and send single view links to individual emails.
* User avatar
* User CSS editing ( Remember MySpace! ) - upload your own custom theme for your CV
* Component library with drag and drop components to enable you to customise your CV further.
* CV Blockchain ( linking all the CV's that want to be searchable in a distributed network ).
* Theme library so that users can pick from predefined CV themes.

== (Theoretical) Development timeline

* Speed up PDF generation ( currently times out on some deployments, something to do with CSS )
* Upgrade to Rails 5, Angular 2 and Bootstrap 4
* User CSS editing feature
* Invite only viewing
* Build theme library

== Setup

    git clone https://github.com/stevemartin/worklist.git
    cd worklist
    bundle install --path vendor/bundle
    npm install -g karma-cli
    npm install

    rake db:create:all
    rake db:migrate
    RAILS_ENV=test rake db:migrate


== Testing

in seperate terminals or tmux windows respectively...

    guard # for ruby tests
    karma start # for angular unit tests ( NOTE - depends on vendored gems )
    karma start karma-e2e.conf.js # for angular e2e tests ( again, depends on vendored gems )
    JAVASCRIPT_DRIVER=selenium cucumber features

= API Reference
                  Prefix Verb   URI Pattern                            Controller#Action
                    root GET    /                                      landing#show
                         GET    /:url(html, json)                      worklists#url

                  Prefix Verb   URI Pattern                            Controller#Action
        new_user_session GET    /users/sign_in(html, json)             devise/sessions#new
            user_session POST   /users/sign_in(html, json)             devise/sessions#create
    destroy_user_session DELETE /users/sign_out(html, json)            devise/sessions#destroy
           user_password POST   /users/password(html, json)            devise/passwords#create
       new_user_password GET    /users/password/new(html, json)        devise/passwords#new
      edit_user_password GET    /users/password/edit(html, json)       devise/passwords#edit
                         PATCH  /users/password(html, json)            devise/passwords#update
                         PUT    /users/password(html, json)            devise/passwords#update
cancel_user_registration GET    /users/cancel(html, json)              devise/registrations#cancel
       user_registration POST   /users(html, json)                     devise/registrations#create
   new_user_registration GET    /users/sign_up(html, json)             devise/registrations#new
  edit_user_registration GET    /users/edit(html, json)                devise/registrations#edit
                         PATCH  /users(html, json)                     devise/registrations#update
                         PUT    /users(html, json)                     devise/registrations#update
                         DELETE /users(html, json)                     devise/registrations#destroy
            current_user GET    /current_user(html, json)              worklists#show_current_user

                  Prefix Verb   URI Pattern                            Controller#Action
               worklists POST   /worklists(json)                       worklists#create
           new_worklists GET    /worklists/new(json)                   worklists#new
          edit_worklists GET    /worklists/edit(json)                  worklists#edit
                         GET    /worklists(json)                       worklists#show
                         PATCH  /worklists(json)                       worklists#update
                         PUT    /worklists(json)                       worklists#update
                         DELETE /worklists(json)                       worklists#destroy

                  Prefix Verb   URI Pattern                            Controller#Action
 edit_pre_auth_worklists GET    /pre_auth/:url/:url_key/edit(json)     pre_auth_worklists#edit
      pre_auth_worklists GET    /pre_auth/:url/:url_key(json)          pre_auth_worklists#show
                         PATCH  /pre_auth/:url/:url_key(json)          pre_auth_worklists#update
                         PUT    /pre_auth/:url/:url_key(json)          pre_auth_worklists#update
                         DELETE /pre_auth/:url/:url_key(json)          pre_auth_worklists#destroy
            pre_auth_new GET    /pre_auth/new(json)                    pre_auth_worklists#new
                pre_auth POST   /pre_auth(json)                        pre_auth_worklists#create

                  Prefix Verb   URI Pattern                            Controller#Action
                         POST   /link_worklist/:url/:url_key(json)     worklists#link_worklist
